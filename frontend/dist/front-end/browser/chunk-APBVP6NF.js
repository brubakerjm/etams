import{a as ke}from"./chunk-OPID4UBU.js";import{a as de,b as me}from"./chunk-BMEYXFRB.js";import{a as ce}from"./chunk-JRB3M7FQ.js";import{a as pe,b as ue}from"./chunk-FU2RVMGM.js";import{$a as re,A as R,T as $,Xa as le,Ya as ne,_a as ae,da as H,ea as J,fa as K,j as A,ja as Q,k as h,ka as X,l as V,m as U,ma as Y,na as Z,o as P,oa as ee,q as G,r as j,s as x,t as B,ta as te,u as L,ua as ie,v as z,va as se,w as q,wa as oe,y as W}from"./chunk-JS2QCX3E.js";import{Cb as u,Gc as I,Hc as O,Ic as w,Ma as d,Na as f,Nb as n,Ob as F,Qb as N,Rb as T,Sb as _,Tb as E,Wb as b,Xa as y,a as k,b as M,cb as C,nb as m,qa as D,tb as l,ub as o,vb as v,xa as g}from"./chunk-VXWA6INE.js";var fe=r=>({"clr-required-mark":r});function Ce(r,e){r&1&&(l(0,"clr-control-error"),n(1,' Status must be "Unassigned" if no employee is assigned '),o())}function ve(r,e){r&1&&(l(0,"clr-control-error"),n(1,' Status must not be "Unassigned" if an employee is assigned '),o())}function Te(r,e){if(r&1&&(l(0,"option",19),n(1),o()),r&2){let i=e.$implicit;m("value",i.id),d(),N(" ",i.firstName," ",i.lastName," ")}}function _e(r,e){r&1&&(l(0,"clr-control-error"),n(1,' Assigned employee is incompatible with "Unassigned" status '),o())}function Ee(r,e){r&1&&(l(0,"clr-control-error"),n(1,' An employee must be assigned if status is not "Unassigned" '),o())}var S=class r{constructor(e,i){this.fb=e;this.employeeService=i}clrModalOpen=!1;task;isNew=!0;clrModalOpenChange=new g;save=new g;close=new g;delete=new g;taskForm;deadlineControl=new P("",[h.required,this.futureDateValidator]);employees=[];filteredEmployees=[];ngOnInit(){this.initializeForm(),console.log("initializeForm():",this.taskForm),this.fetchEmployees()}ngOnChanges(e){if(e.task&&this.task){console.log("Task data received in modal:",this.task);let i=this.convertDateToPickerFormat(this.task.deadline);console.log("Formatted Deadline for Picker:",i),this.taskForm.patchValue({title:this.task.title,description:this.task.description,status:this.task.status,assignedEmployeeId:this.task.assignedEmployeeId||null,deadline:i}),this.deadlineControl.setValue(i),this.task.id!==null?(console.log("this.task.id !== null ran"),this.taskForm.markAllAsTouched(),this.taskForm.updateValueAndValidity()):(console.log("else ran"),this.taskForm.reset())}}initializeForm(){this.taskForm=this.fb.group({title:["",[h.required,h.maxLength(100)]],description:["",h.maxLength(1e3)],status:["UNASSIGNED",h.required],assignedEmployeeId:[null]},{validators:this.crossFieldValidator}),console.log("initializeForm():",this.taskForm),this.taskForm.addControl("deadline",this.deadlineControl)}crossFieldValidator(e){let i=e.get("assignedEmployeeId"),t=e.get("status"),s=i?.value,a=t?.value;typeof s=="object"||s==="null"?s=null:typeof s=="string"&&(s=s.trim()?Number(s):null);let p={},c={};return s!==null&&a==="UNASSIGNED"&&(p.statusForAssignedEmployee=!0,c.assignedEmployeeMismatch=!0),s===null&&a!=="UNASSIGNED"&&(p.statusForUnassigned=!0,c.assignedEmployeeRequired=!0),t&&t.setErrors(Object.keys(p).length>0?p:null),i&&i.setErrors(Object.keys(c).length>0?c:null),Object.keys(p).length>0||Object.keys(c).length>0?k(k({},p),c):null}futureDateValidator(e){if(!e.value)return null;let i=e.value.split("/");if(i.length!==3)return{invalidFormat:!0};let[t,s,a]=i.map(Number),p=new Date(a,t-1,s),c=new Date;return c.setHours(0,0,0,0),p<c?{pastDate:!0}:null}fetchEmployees(){this.employeeService.getEmployees().subscribe({next:e=>{let i={id:0,firstName:"Unassigned",lastName:"",email:"",username:"",role:"",admin:!1,createdAt:"",updatedAt:"",taskCount:null};this.employees=e,this.filteredEmployees=[i,...this.employees]},error:e=>console.error("Error fetching employees:",e)})}onSubmit(){if(this.taskForm.valid){console.log("Before formatting:",this.deadlineControl.value);let e=this.convertDateForBackend(this.deadlineControl.value??"");console.log("Submitting Task with Deadline:",e);let i=M(k(k({},this.task),this.taskForm.value),{deadline:e});this.save.emit(i)}}convertDateToPickerFormat(e){if(!e)return"";if(e.includes("/"))return e;let[i,t,s]=e.split("-");return`${t}/${s}/${i}`}convertDateForBackend(e){if(!e)return"";let[i,t,s]=e.split("/");return`${s}-${i.padStart(2,"0")}-${t.padStart(2,"0")}`}closeModal(){this.clrModalOpen=!1,this.clrModalOpenChange.emit(!1),this.close.emit()}static \u0275fac=function(i){return new(i||r)(f(W),f(me))};static \u0275cmp=y({type:r,selectors:[["app-tasks-modal"]],inputs:{clrModalOpen:"clrModalOpen",task:"task",isNew:"isNew"},outputs:{clrModalOpenChange:"clrModalOpenChange",save:"save",close:"close",delete:"delete"},features:[D],decls:51,vars:17,consts:[[3,"clrModalOpenChange","clrModalOpen"],[1,"modal-title"],[1,"modal-body"],["clrForm","","clrLayout","horizontal","clrLabelSize","3",3,"ngSubmit","formGroup"],["for","title",3,"ngClass"],["clrInput","","id","title","type","text","formControlName","title"],["for","description"],["clrTextarea","","id","description","formControlName","description"],["for","status"],["clrSelect","","id","status","formControlName","status"],["value","PENDING"],["value","IN_PROGRESS"],["value","COMPLETED"],["value","UNASSIGNED"],[4,"ngIf"],["for","deadline",3,"ngClass"],["type","date","clrDate","","id","deadline","name","date",3,"formControl"],["for","assignedEmployee"],["clrSelect","","id","assignedEmployee","formControlName","assignedEmployeeId"],[3,"value"],[3,"value",4,"ngFor","ngForOf"],[1,"modal-footer"],["type","button",1,"btn","btn-outline",3,"click"],["type","submit",1,"btn","btn-primary",3,"disabled"]],template:function(i,t){if(i&1&&(l(0,"clr-modal",0),E("clrModalOpenChange",function(a){return _(t.clrModalOpen,a)||(t.clrModalOpen=a),a}),u("clrModalOpenChange",function(){return t.closeModal()}),l(1,"h3",1),n(2),o(),l(3,"div",2)(4,"form",3),u("ngSubmit",function(){return t.onSubmit()}),l(5,"clr-input-container")(6,"label",4),n(7,"Title"),o(),v(8,"input",5),l(9,"clr-control-error"),n(10,"Task title is required"),o()(),l(11,"clr-textarea-container")(12,"label",6),n(13,"Description"),o(),v(14,"textarea",7),l(15,"clr-control-error"),n(16,"Maximum description length is 1000 characters"),o()(),l(17,"clr-select-container")(18,"label",8),n(19,"Status"),o(),l(20,"select",9)(21,"option",10),n(22,"Pending"),o(),l(23,"option",11),n(24,"In Progress"),o(),l(25,"option",12),n(26,"Completed"),o(),l(27,"option",13),n(28,"Unassigned"),o()(),C(29,Ce,2,0,"clr-control-error",14)(30,ve,2,0,"clr-control-error",14),o(),l(31,"clr-date-container")(32,"label",15),n(33,"Deadline"),o(),v(34,"input",16),l(35,"clr-control-error"),n(36,"Date must be in the future"),o()(),l(37,"clr-select-container")(38,"label",17),n(39,"Assigned Employee"),o(),l(40,"select",18)(41,"option",19),n(42,"Unassigned"),o(),C(43,Te,2,3,"option",20),o(),C(44,_e,2,0,"clr-control-error",14)(45,Ee,2,0,"clr-control-error",14),o(),l(46,"div",21)(47,"button",22),u("click",function(){return t.closeModal()}),n(48,"Cancel"),o(),l(49,"button",23),n(50,"Save"),o()()()()()),i&2){let s,a,p,c;T("clrModalOpen",t.clrModalOpen),d(2),F(t.isNew?"Create New Task":"Edit Task"),d(2),m("formGroup",t.taskForm),d(2),m("ngClass",b(13,fe,t.isNew)),d(23),m("ngIf",(s=t.taskForm.get("status"))==null?null:s.hasError("statusForUnassigned")),d(),m("ngIf",(a=t.taskForm.get("status"))==null?null:a.hasError("statusForAssignedEmployee")),d(2),m("ngClass",b(15,fe,t.isNew)),d(2),m("formControl",t.deadlineControl),d(7),m("value",null),d(2),m("ngForOf",t.employees),d(),m("ngIf",(p=t.taskForm.get("assignedEmployeeId"))==null?null:p.hasError("assignedEmployeeMismatch")),d(),m("ngIf",(c=t.taskForm.get("assignedEmployeeId"))==null?null:c.hasError("assignedEmployeeRequired")),d(4),m("disabled",!t.taskForm.valid)}},dependencies:[w,O,I,R,G,z,q,A,L,V,U,j,x,B,ae,le,ne,H,$,J,K,Y,Z,ee,X,Q,ie,te,oe,se],styles:["input[clrInput][_ngcontent-%COMP%]{width:30ch;max-width:100%}"]})};var he=class r{constructor(e,i,t){this.taskService=e;this.metricsService=i;this.authService=t}title="Tasks";metrics=[];tasks=[];selectedTask=null;isModalOpen=!1;isNew=!0;isAdmin;userId=null;tableColumns;showDeleteConfirmation=!1;taskToDelete=null;ngOnInit(){this.isAdmin=this.authService.isAdmin(),this.userId=this.authService.getEmployeeId(),this.initializeTableColumns(),this.fetchTasks()}initializeTableColumns(){this.tableColumns=this.isAdmin?[{key:"title",label:"Task Title"},{key:"description",label:"Description"},{key:"status",label:"Status"},{key:"assignedEmployeeName",label:"Assigned Employee"},{key:"deadline",label:"Deadline"}]:[{key:"title",label:"Task Title"},{key:"description",label:"Description"},{key:"status",label:"Status"},{key:"deadline",label:"Deadline"}]}fetchTasks(){if(this.isAdmin)this.taskService.getTasks().subscribe({next:e=>{this.tasks=e,this.calculateMetrics()},error:e=>console.error("Error fetching tasks:",e)});else{let e=this.authService.getEmployeeId();e!==null?this.taskService.getTasksByUser(e).subscribe({next:i=>{this.tasks=i,this.calculateMetrics()},error:i=>console.error("Error fetching user tasks:",i)}):console.error("User ID is null, cannot fetch tasks.")}}calculateMetrics(){this.metrics=this.metricsService.calculateTaskMetrics(this.tasks)}openModal(e){console.log("openModal called with:",e),e?(this.isNew=!1,this.selectedTask=k({},e)):(this.isNew=!0,this.selectedTask={id:null,title:"",description:"",status:"UNASSIGNED",deadline:"",assignedEmployee:null,assignedEmployeeId:null,assignedEmployeeName:null,createdAt:"",updatedAt:""}),this.isModalOpen=!0,console.log("isModalOpen set to:",this.isModalOpen)}closeModal(){this.isModalOpen=!1,this.selectedTask=null}saveTask(e){this.isNew?this.taskService.saveTask(e).subscribe({next:i=>{this.tasks=[...this.tasks,i],this.calculateMetrics(),this.closeModal()},error:i=>console.error("Error saving task:",i)}):this.taskService.updateTask(e.id,e).subscribe({next:i=>{this.tasks=this.tasks.map(t=>t.id===i.id?i:t),this.calculateMetrics(),this.closeModal()},error:i=>console.error("Error updating task:",i)})}confirmDeleteTask(e){this.taskToDelete=e,this.showDeleteConfirmation=!0}deleteTask(){if(!this.taskToDelete)return;let e=this.taskToDelete.id;e&&(this.taskService.deleteTask(e).subscribe({next:()=>{this.tasks=this.tasks.filter(i=>i.id!==e),this.calculateMetrics(),this.closeModal()},error:i=>console.error("Error deleting task:",i)}),this.taskToDelete=null,this.showDeleteConfirmation=!1)}static \u0275fac=function(i){return new(i||r)(f(ce),f(de),f(re))};static \u0275cmp=y({type:r,selectors:[["app-tasks"]],decls:4,vars:10,consts:[[3,"newAction","metrics","title"],[3,"editClick","deleteClick","columns","data","emptyMessage"],[3,"clrModalOpenChange","save","close","clrModalOpen","task","isNew"],["title","Task Deletion",3,"confirmed","canceled","show","message"]],template:function(i,t){i&1&&(l(0,"app-sub-header",0),u("newAction",function(){return t.openModal()}),o(),l(1,"app-table",1),u("editClick",function(a){return t.openModal(a)})("deleteClick",function(a){return t.confirmDeleteTask(a)}),o(),l(2,"app-tasks-modal",2),E("clrModalOpenChange",function(a){return _(t.isModalOpen,a)||(t.isModalOpen=a),a}),u("save",function(a){return t.saveTask(a)})("close",function(){return t.closeModal()}),o(),l(3,"app-confirm-modal",3),u("confirmed",function(){return t.deleteTask()})("canceled",function(){return t.showDeleteConfirmation=!1}),o()),i&2&&(m("metrics",t.metrics)("title",t.title),d(),m("columns",t.tableColumns)("data",t.tasks)("emptyMessage",t.isAdmin?"There are no tasks created":"There are no tasks assigned to you"),d(),T("clrModalOpen",t.isModalOpen),m("task",t.selectedTask)("isNew",t.isNew),d(),m("show",t.showDeleteConfirmation)("message","Are you sure you want to delete the task "+(t.taskToDelete==null?null:t.taskToDelete.title)+"?"))},dependencies:[pe,ue,S,ke],encapsulation:2})};export{he as TasksComponent};
