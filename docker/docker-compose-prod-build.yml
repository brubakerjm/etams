# Local Build Version

# Configuring docker network to restrict network communication between the backend and the database
# Setting resource limits on backend
networks:
  etams-network:
    driver: bridge
    internal: false
  db-network:
    driver: bridge
    internal: true

services:
  mysql:
    image: yobasystems/alpine-mariadb
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: etams
      MYSQL_USER: etamsapp
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../db-init:/docker-entrypoint-initdb.d
    networks:
      - db-network

  backend:
    build:
      context: ../backend/etams
      dockerfile: Dockerfile
      platforms:
        - "linux/amd64"
    container_name: backend
    restart: always
    depends_on:
      - mysql
    environment:
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health
      SPRING_PROFILES_ACTIVE: production
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      # Enable Forwarded Headers for HTTPS
      SERVER_FORWARD_HEADERS_STRATEGY: native
      SERVER_TOMCAT_REMOTE_IP_HEADER: X-Forwarded-For
      SERVER_TOMCAT_REMOTE_IP_PROTOCOL_HEADER: X-Forwarded-Proto
      JWT_SECRET: ${JWT_SECRET}
      JAVA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=50.0 -Xss256k -XX:+UseShenandoahGC -XX:+UseCompressedClassPointers -XX:MaxMetaspaceSize=128m -XX:InitiatingHeapOccupancyPercent=30"
    ports:
      - "8080:8080"
    volumes:
      - ../back-end/etams/logs:/app/logs
    networks:
      - etams-network
      - db-network


  frontend:
    build:
      context: ../frontend
      dockerfile: ../frontend/dockerfile-prod
      platforms:
        - "linux/amd64"
    container_name: frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "8000:80"
    networks:
      - etams-network
    volumes:
      - ../nginx/prod.conf:/etc/nginx/conf.d/default.conf

volumes:
  mysql_data: